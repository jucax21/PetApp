@page "/productos"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@using PetApp.Models
@inject PetApp.Data.PetServicesContext Context
@attribute [Authorize(Roles = "Cliente")]

<h3>Catálogo de Productos</h3>

@if (productos == null)
{
    <p>Cargando productos...</p>
}
else if (!productos.Any())
{
    <p>No hay productos disponibles.</p>
}
else
{
    <div class="row">
        @foreach (var producto in productos)
        {
            <div class="col-md-4 mb-3">
                <div class="card h-100">
                    <div class="card-body">
                        <h5 class="card-title">@producto.Nombre</h5>
                        <p class="card-text">@producto.Descripcion</p>
                        <p class="card-text"><strong>Precio:</strong> @producto.Precio.ToString("C")</p>
                        <p class="card-text"><strong>Stock:</strong> @producto.Stock</p>
                        <button class="btn btn-success" @onclick="() => Comprar(producto.Id)" disabled="@(producto.Stock == 0)">
                            Comprar
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    List<Producto> productos = new();

    protected override async Task OnInitializedAsync()
    {
        productos = await Context.Productos.ToListAsync();
    }

    async Task Comprar(int productoId)
    {
        var producto = await Context.Productos.FindAsync(productoId);
        if (producto != null && producto.Stock > 0)
        {
            producto.Stock--;
            await Context.SaveChangesAsync();
            productos = await Context.Productos.ToListAsync(); // Refrescar vista
        }
    }
}
