@page "/admin/editar-mascota/{Id:int}"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Forms
@using PetApp.Models
@attribute [Authorize(Roles = "Administrador")]
@inject PetApp.Data.PetServicesContext Context
@inject NavigationManager Navigation

<h3>Editar Mascota</h3>

@if (mascota == null)
{
    <p>Cargando datos...</p>
}
else
{
    <EditForm Model="@mascota" OnValidSubmit="GuardarCambios">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div>
            <label>Nombre:</label>
            <InputText @bind-Value="mascota.Nombre" class="form-control" />
        </div>
        <div>
            <label>Tipo:</label>
            <InputText @bind-Value="mascota.Tipo" class="form-control" />
        </div>
        <div>
            <label>Raza:</label>
            <InputText @bind-Value="mascota.Raza" class="form-control" />
        </div>
        <div>
            <label>Edad:</label>
            <InputNumber @bind-Value="mascota.Edad" class="form-control" />
        </div>

        <button class="btn btn-success mt-2">Guardar Cambios</button>
        <button class="btn btn-secondary mt-2" @onclick="() => Navigation.NavigateTo("/admin/mascotas")">Cancelar</button>
    </EditForm>
}

@code {
    [Parameter] public int Id { get; set; }
    Mascota mascota;

    protected override async Task OnInitializedAsync()
    {
        mascota = await Context.Mascotas.FindAsync(Id);
    }

    async Task GuardarCambios()
    {
        Context.Mascotas.Update(mascota);
        await Context.SaveChangesAsync();
        Navigation.NavigateTo("/admin/mascotas");
    }
}
